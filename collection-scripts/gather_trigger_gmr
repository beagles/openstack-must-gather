#!/bin/bash
#
# Trigger Guru Meditation Reports in the different services to have them in the
# logs: https://github.com/openstack/oslo.reports
#
# Some services use signals and others use touching a file to trigger the
# reporting.

if [[ -z "$DIR_NAME" ]]; then
    CALLED=1
    DIR_NAME=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
    source "${DIR_NAME}/common.sh"
fi

oc="/usr/bin/oc -n ${OSP_NS} "
oce="$oc exec "


trigger_gmr() {
    service="$1"
    case "${service}" in
    "cinder")
        cinder_trigger_gmr
        ;;
    "nova")
        nova_trigger_gmr
        ;;
    *) ;;
    esac

}


cinder_trigger_gmr() {
    # https://docs.openstack.org/cinder/latest/contributor/gmr.html
    echo "Trigger GMR for Cinder services"

    # Get pod name and type of service for cinder pods
    svcs=`$oc get pod -l service=cinder -o=custom-columns=N:.metadata.name,T:metadata.labels.component --no-headers`

    # Cinder uses files to trigger GMR because volume and backup share the PID
    # with the host so we don't know what PID the service has
    while read -r line; do
        podname="${line% *}"
        svctype="${line##* }"
        [ "${svctype}" == '<none>' ] && continue
        run_bg $oce $podname -c $svctype -- touch /var/lib/cinder
    done <<< "$svcs"
}


nova_trigger_gmr() {
    # https://docs.openstack.org/nova/latest/reference/gmr.html
    echo "Trigger GMR for Nova services"

    pods=`$oc get pod -l 'service in (nova-scheduler, nova-conductor, nova-novncproxy)' -o=custom-columns=N:.metadata.name --no-headers | tr '\n' ' '`
    for pod in $pods
    do
        run_bg $oce $pod -- touch /var/lib/nova
    done

    apis=`$oc get pod -l service=nova-api -o=custom-columns=N:.metadata.name --no-headers | tr '\n' ' '`
    for api in $apis
    do
        # The GMR report will be emitted not to the normal API log
        # but the log of the apache process but must gather pulls both
        # containers' log so we are good.
        run_bg $oce -c nova-api-api $api -- touch /var/lib/nova
    done

    for api in $apis
    do
        # NOTE(gibi): This is a hack. The nova-api uses eventlet.
        # All threads including the GMR file monitoring one are frozen by
        # apache if there is no active request to handle. The requests from
        # the k8s probes are not enough as they are handled without any
        # eventlet yielding. So the GMR monitoring thread is not woken up.
        # Therefore we are sending an API request that needs DB access as such
        # access will involve an eventlet yield letting the GMR monitoring
        # thread a chance to run and detect the trigger.
        # If we have multiple nova-api replicas we are relying on the assumed
        # round robin scheduling of the k8s service to the backends to send
        # an API request to each nova-api pod in this loop.
        run_bg $oce openstackclient -- openstack compute service list
    done

    # NOTE(gibi): I failed to trigger GMR in nova-metadata so that remains
    # as an investigation for later.
}


# get the list of existing ctlplane services (once) and
# filter the whole list processing only services with an
# associated function
services=`$oce openstackclient -- openstack service list -c Name -f value`
for svc in "${OSP_SERVICES[@]}"; do
    [[ "${services[*]}" =~ ${svc} ]] && trigger_gmr "$svc"
done

[[ $CALLED -eq 1 ]] && wait_bg
